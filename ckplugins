#!/bin/bash

set -euo pipefail

while read -r mr_url mr_dir; do
    printf 'Checking %s ...\n' "$mr_dir"

    path="pack/plugins/start/${mr_dir}"
    json="$(gh repo view --json url "$mr_url")"

    # Check that the configured URL matches the GitHub URL. If the repository
    # has been moved to another user or organization, the URL will change.
    # Generally, the existing configuration continues to work, because GitHub
    # sets up a redirection when the repository is moved.

    gh_url="$(jq -r '.url' <<<"$json").git"
    if [[ $mr_url != "$gh_url" ]]; then
        printf '❌ Mismatched GitHub URL\n'
        printf '  Configured : %s\n' "$mr_url"
        printf '  GitHub     : %s\n' "$gh_url"
    fi

    # Check to see if the current branch is behind the most recent branch in
    # the repository.

    read -r current_branch current_commit <<<"$(git -C "$path" branch --format='%(refname:short) %(objectname)')"
    read -r latest_branch latest_commit <<<"$(git -C "$path" branch -a --sort=-committerdate --format='%(refname:short) %(objectname)' | grep -v '/HEAD' | head -n1)"

    behind="$(git -C "$path" rev-list --count "${current_commit}...${latest_commit}")"

    if [[ $behind -gt 0 ]]; then
        printf '⚠️ Current branch is behind by %d commits\n' "$behind"
        printf '  Current : %s\n' "$current_branch"
        printf '  Latest  : %s\n' "$latest_branch"
    fi

    # Check to see how long ago the plugin was last updated.
    #
    # Most of the plugins I use don't see frequent updates, so this whole
    # section will be ignored for now.

    #current_time="$(date +%s)"
    #last_updated="$(git -C "$path" log -1 --format='%ct')"

    #if [[ $((current_time - last_updated)) -gt 157680000 ]]; then
    #    printf '❌ Last updated over 5 years ago\n'
    #    printf '  Last commit : %s\n' "$(git -C "$path" log -1 --format='%cD %h %cN %s')"
    #elif [[ $((current_time - last_updated)) -gt 31536000 ]]; then
    #    printf '⚠️ Last updated over 1 year ago\n'
    #    printf '  Last commit : %s\n' "$(git -C "$path" log -1 --format='%cD %h %cN %s')"
    #elif [[ $((current_time - last_updated)) -gt 7776000 ]]; then
    #    printf '⚠️ Last updated over 90 days ago\n'
    #    printf '  Last commit : %s\n' "$(git -C "$path" log -1 --format='%cD %h %cN %s')"
    #fi
done < <(awk '($1 == "checkout") { print $5, $6 }' .mrconfig | sed -e "s/'//g" | sort -k2)
